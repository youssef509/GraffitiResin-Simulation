{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youss\\\\OneDrive\\\\Desktop\\\\React-App\\\\frontend\\\\src\\\\components\\\\SimulatorApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SimulatorType from \"./SimulatorType\";\nimport MarbleSelector from \"./MarbleSelector\";\nimport BackgroundSelector from \"./BackgroundSelector\";\nimport SimulatorDisplay from \"./SimulatorDisplay\";\nimport \"../SimulatorApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorApp = () => {\n  _s();\n  const [simulatorType, setSimulatorType] = useState(\"Strips\"); // Default simulator type\n  const [selectedMarbles, setSelectedMarbles] = useState([]); // Array to track marble selections (up to 3 clicks)\n  const [background, setBackground] = useState(null); // Selected background\n\n  const handleSimulatorTypeChange = type => {\n    setSimulatorType(type);\n    setSelectedMarbles([]); // Reset marbles when simulator type changes\n    setBackground(null); // Reset background\n  };\n  const handleMarbleSelection = marbleId => {\n    // Add marble selection logic (up to 3 clicks)\n    if (selectedMarbles.length < 3) {\n      setSelectedMarbles(prev => [...prev, marbleId]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulator-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tile Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulatorType, {\n      selectedType: simulatorType,\n      onChange: handleSimulatorTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarbleSelector, {\n      onMarbleSelect: handleMarbleSelection,\n      selectedMarbles: selectedMarbles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackgroundSelector, {\n      onBackgroundSelect: setBackground,\n      selectedBackground: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulatorDisplay, {\n      simulatorType: simulatorType,\n      selectedMarbles: selectedMarbles,\n      background: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorApp, \"04b1edLIHE/1kgikONCodkCEOPY=\");\n_c = SimulatorApp;\nexport default SimulatorApp;\nvar _c;\n$RefreshReg$(_c, \"SimulatorApp\");","map":{"version":3,"names":["React","useState","SimulatorType","MarbleSelector","BackgroundSelector","SimulatorDisplay","jsxDEV","_jsxDEV","SimulatorApp","_s","simulatorType","setSimulatorType","selectedMarbles","setSelectedMarbles","background","setBackground","handleSimulatorTypeChange","type","handleMarbleSelection","marbleId","length","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedType","onChange","onMarbleSelect","onBackgroundSelect","selectedBackground","_c","$RefreshReg$"],"sources":["C:/Users/Youss/OneDrive/Desktop/React-App/frontend/src/components/SimulatorApp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SimulatorType from \"./SimulatorType\";\r\nimport MarbleSelector from \"./MarbleSelector\";\r\nimport BackgroundSelector from \"./BackgroundSelector\";\r\nimport SimulatorDisplay from \"./SimulatorDisplay\";\r\nimport \"../SimulatorApp.css\";\r\n\r\nconst SimulatorApp = () => {\r\n  const [simulatorType, setSimulatorType] = useState(\"Strips\"); // Default simulator type\r\n  const [selectedMarbles, setSelectedMarbles] = useState([]); // Array to track marble selections (up to 3 clicks)\r\n  const [background, setBackground] = useState(null); // Selected background\r\n\r\n  const handleSimulatorTypeChange = (type) => {\r\n    setSimulatorType(type);\r\n    setSelectedMarbles([]); // Reset marbles when simulator type changes\r\n    setBackground(null); // Reset background\r\n  };\r\n\r\n  const handleMarbleSelection = (marbleId) => {\r\n    // Add marble selection logic (up to 3 clicks)\r\n    if (selectedMarbles.length < 3) {\r\n      setSelectedMarbles((prev) => [...prev, marbleId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"simulator-app\">\r\n      <h1>Tile Simulator</h1>\r\n      {/* Simulator Type Selector */}\r\n      <SimulatorType selectedType={simulatorType} onChange={handleSimulatorTypeChange} />\r\n\r\n      {/* Marble Selector */}\r\n      <MarbleSelector onMarbleSelect={handleMarbleSelection} selectedMarbles={selectedMarbles} />\r\n\r\n      {/* Background Selector */}\r\n      <BackgroundSelector onBackgroundSelect={setBackground} selectedBackground={background} />\r\n\r\n      {/* Simulation Display */}\r\n      <SimulatorDisplay\r\n        simulatorType={simulatorType}\r\n        selectedMarbles={selectedMarbles}\r\n        background={background}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulatorApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMe,yBAAyB,GAAIC,IAAI,IAAK;IAC1CN,gBAAgB,CAACM,IAAI,CAAC;IACtBJ,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;IACxBE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMG,qBAAqB,GAAIC,QAAQ,IAAK;IAC1C;IACA,IAAIP,eAAe,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC9BP,kBAAkB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,QAAQ,CAAC,CAAC;IACnD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvBpB,OAAA,CAACL,aAAa;MAAC0B,YAAY,EAAElB,aAAc;MAACmB,QAAQ,EAAEb;IAA0B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGnFpB,OAAA,CAACJ,cAAc;MAAC2B,cAAc,EAAEZ,qBAAsB;MAACN,eAAe,EAAEA;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG3FpB,OAAA,CAACH,kBAAkB;MAAC2B,kBAAkB,EAAEhB,aAAc;MAACiB,kBAAkB,EAAElB;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGzFpB,OAAA,CAACF,gBAAgB;MACfK,aAAa,EAAEA,aAAc;MAC7BE,eAAe,EAAEA,eAAgB;MACjCE,UAAU,EAAEA;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}