{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youss\\\\OneDrive\\\\Desktop\\\\React-App\\\\frontend\\\\src\\\\components\\\\SimulatorApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TriNSimulator from \"./TriNSimulator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorApp = () => {\n  _s();\n  const [simulatorType, setSimulatorType] = useState(\"TriN\"); // Default to TriN\n  const [background, setBackground] = useState(\"\"); // Background selection\n\n  const handleBackgroundChange = bg => {\n    setBackground(bg); // Set the selected background\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container vh-100 d-flex flex-column align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simulator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"simulator\",\n        role: \"group\",\n        \"aria-label\": \"Simulator types\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-primary ${simulatorType === \"TriN\" ? \"active\" : \"\"}`,\n          onClick: () => setSimulatorType(\"TriN\"),\n          children: \"TriN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-primary ${simulatorType === \"TriL\" ? \"active\" : \"\"}`,\n          onClick: () => setSimulatorType(\"TriL\"),\n          children: \"TriL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-primary ${simulatorType === \"Rectangles\" ? \"active\" : \"\"}`,\n          onClick: () => setSimulatorType(\"Rectangles\"),\n          children: \"Rectangles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-primary ${simulatorType === \"Strips\" ? \"active\" : \"\"}`,\n          onClick: () => setSimulatorType(\"Strips\"),\n          children: \"Strips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      children: simulatorType === \"TriN\" && /*#__PURE__*/_jsxDEV(TriNSimulator, {\n        background: background,\n        onBackgroundChange: handleBackgroundChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorApp, \"kFCYBSXbqRDWB+c+2WW/zrYCetg=\");\n_c = SimulatorApp;\nexport default SimulatorApp;\nvar _c;\n$RefreshReg$(_c, \"SimulatorApp\");","map":{"version":3,"names":["React","useState","TriNSimulator","jsxDEV","_jsxDEV","SimulatorApp","_s","simulatorType","setSimulatorType","background","setBackground","handleBackgroundChange","bg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","onBackgroundChange","_c","$RefreshReg$"],"sources":["C:/Users/Youss/OneDrive/Desktop/React-App/frontend/src/components/SimulatorApp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TriNSimulator from \"./TriNSimulator\";\r\n\r\nconst SimulatorApp = () => {\r\n  const [simulatorType, setSimulatorType] = useState(\"TriN\"); // Default to TriN\r\n  const [background, setBackground] = useState(\"\"); // Background selection\r\n\r\n  const handleBackgroundChange = (bg) => {\r\n    setBackground(bg); // Set the selected background\r\n  };\r\n\r\n  return (\r\n    <div className=\"container vh-100 d-flex flex-column align-items-center justify-content-center\">\r\n      <header className=\"text-center mb-4\">\r\n        <h1>Simulator</h1>\r\n        <div className=\"simulator\" role=\"group\" aria-label=\"Simulator types\">\r\n          <button\r\n            className={`btn btn-primary ${simulatorType === \"TriN\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSimulatorType(\"TriN\")}\r\n          >\r\n            TriN\r\n          </button>\r\n          <button\r\n            className={`btn btn-primary ${simulatorType === \"TriL\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSimulatorType(\"TriL\")}\r\n          >\r\n            TriL\r\n          </button>\r\n          <button\r\n            className={`btn btn-primary ${simulatorType === \"Rectangles\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSimulatorType(\"Rectangles\")}\r\n          >\r\n            Rectangles\r\n          </button>\r\n          <button\r\n            className={`btn btn-primary ${simulatorType === \"Strips\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSimulatorType(\"Strips\")}\r\n          >\r\n            Strips\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"w-100\">\r\n        {simulatorType === \"TriN\" && (\r\n          <TriNSimulator\r\n            background={background}\r\n            onBackgroundChange={handleBackgroundChange}\r\n          />\r\n        )}\r\n        {/* Add other simulator components as needed */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulatorApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}